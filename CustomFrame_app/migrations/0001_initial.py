# Generated by Django 5.2.3 on 2025-07-03 06:07

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Frame',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('image', models.ImageField(upload_to='frames/')),
                ('corner_image', models.ImageField(upload_to='frames/corner/')),
                ('inner_width', models.FloatField()),
                ('inner_height', models.FloatField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('confirmed', 'Confirmed'), ('shipped', 'Shipped'), ('delivered', 'Delivered'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='FinishingVariant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('finish_name', models.CharField(max_length=50)),
                ('image', models.ImageField(upload_to='frame_variants/finishes/')),
                ('corner_image', models.ImageField(upload_to='frame_variants/finishes/corner/')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('frame', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='finishing_variants', to='CustomFrame_app.frame')),
            ],
            options={
                'unique_together': {('frame', 'finish_name')},
            },
        ),
        migrations.CreateModel(
            name='ColorVariant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('color_name', models.CharField(max_length=50)),
                ('image', models.ImageField(upload_to='frame_variants/colors/')),
                ('corner_image', models.ImageField(upload_to='frame_variants/colors/corner/')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('frame', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='color_variants', to='CustomFrame_app.frame')),
            ],
            options={
                'unique_together': {('frame', 'color_name')},
            },
        ),
        migrations.CreateModel(
            name='FrameHangVariant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hanging_name', models.CharField(max_length=50)),
                ('image', models.ImageField(upload_to='hangings_variants/hangings/')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('frame', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='frameHanging_variant', to='CustomFrame_app.frame')),
            ],
            options={
                'unique_together': {('frame', 'hanging_name')},
            },
        ),
        migrations.CreateModel(
            name='SizeVariant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('size_name', models.CharField(max_length=50)),
                ('inner_width', models.FloatField()),
                ('inner_height', models.FloatField()),
                ('image', models.ImageField(blank=True, null=True, upload_to='frame_variants/sizes/')),
                ('corner_image', models.ImageField(blank=True, null=True, upload_to='frame_variants/sizes/corner/')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('frame', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='size_variants', to='CustomFrame_app.frame')),
            ],
            options={
                'unique_together': {('frame', 'size_name')},
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='order_images/')),
                ('quantity', models.PositiveIntegerField()),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('color_variant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='CustomFrame_app.colorvariant')),
                ('finish_variant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='CustomFrame_app.finishingvariant')),
                ('frame', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='CustomFrame_app.frame')),
                ('hanging_variant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='CustomFrame_app.framehangvariant')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='CustomFrame_app.order')),
                ('size_variant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='CustomFrame_app.sizevariant')),
            ],
        ),
        migrations.CreateModel(
            name='CartItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('original_image', models.ImageField(blank=True, null=True, upload_to='cart/original/')),
                ('cropped_image', models.ImageField(blank=True, null=True, upload_to='cart/cropped/')),
                ('adjusted_image', models.ImageField(blank=True, null=True, upload_to='cart/adjusted/')),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('transform_x', models.FloatField(default=0)),
                ('transform_y', models.FloatField(default=0)),
                ('scale', models.FloatField(default=1)),
                ('rotation', models.FloatField(default=0)),
                ('frame_rotation', models.FloatField(default=0)),
                ('total_price', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('cart', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='CustomFrame_app.cart')),
                ('color_variant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='CustomFrame_app.colorvariant')),
                ('finish_variant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='CustomFrame_app.finishingvariant')),
                ('frame', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='CustomFrame_app.frame')),
                ('hanging_variant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='CustomFrame_app.framehangvariant')),
                ('size_variant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='CustomFrame_app.sizevariant')),
            ],
        ),
        migrations.CreateModel(
            name='Login',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_user', models.BooleanField(default=False)),
                ('is_employee', models.BooleanField(default=False)),
                ('email', models.EmailField(max_length=254)),
                ('company_name', models.CharField(blank=True, max_length=100, null=True)),
                ('company_address', models.CharField(blank=True, max_length=100, null=True)),
                ('role', models.CharField(blank=True, max_length=100, null=True)),
                ('phone', models.CharField(blank=True, max_length=100, null=True)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('address', models.CharField(blank=True, max_length=100, null=True)),
                ('is_blocked', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AddField(
            model_name='order',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='frame',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='cart',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='carts', to=settings.AUTH_USER_MODEL),
        ),
    ]
